
ADC_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000552  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000552  000005c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000005ce  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000600  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  0000063c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000012ed  00000000  00000000  0000071c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000761  00000000  00000000  00001a09  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000865  00000000  00000000  0000216a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001dc  00000000  00000000  000029d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000490  00000000  00000000  00002bac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000abb  00000000  00000000  0000303c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00003af7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e5       	ldi	r30, 0x52	; 82
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 9a 02 	call	0x534	; 0x534 <main>
  7a:	0c 94 a7 02 	jmp	0x54e	; 0x54e <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_setPinDir>:
		break;
		case DIO_PORTC:
		SET_BIT(PORTC,pin);
		break;
		case DIO_PORTD:
		SET_BIT(PORTD,pin);
  82:	44 23       	and	r20, r20
  84:	b9 f1       	breq	.+110    	; 0xf4 <DIO_setPinDir+0x72>
  86:	41 30       	cpi	r20, 0x01	; 1
  88:	09 f0       	breq	.+2      	; 0x8c <DIO_setPinDir+0xa>
  8a:	6b c0       	rjmp	.+214    	; 0x162 <DIO_setPinDir+0xe0>
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	89 f0       	breq	.+34     	; 0xb2 <DIO_setPinDir+0x30>
  90:	28 f0       	brcs	.+10     	; 0x9c <DIO_setPinDir+0x1a>
  92:	82 30       	cpi	r24, 0x02	; 2
  94:	c9 f0       	breq	.+50     	; 0xc8 <DIO_setPinDir+0x46>
  96:	83 30       	cpi	r24, 0x03	; 3
  98:	11 f1       	breq	.+68     	; 0xde <DIO_setPinDir+0x5c>
  9a:	08 95       	ret
  9c:	2a b3       	in	r18, 0x1a	; 26
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_setPinDir+0x26>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_setPinDir+0x22>
  ac:	82 2b       	or	r24, r18
  ae:	8a bb       	out	0x1a, r24	; 26
  b0:	08 95       	ret
  b2:	27 b3       	in	r18, 0x17	; 23
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_setPinDir+0x3c>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_setPinDir+0x38>
  c2:	82 2b       	or	r24, r18
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	08 95       	ret
  c8:	24 b3       	in	r18, 0x14	; 20
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_setPinDir+0x52>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_setPinDir+0x4e>
  d8:	82 2b       	or	r24, r18
  da:	84 bb       	out	0x14, r24	; 20
  dc:	08 95       	ret
  de:	21 b3       	in	r18, 0x11	; 17
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_setPinDir+0x68>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_setPinDir+0x64>
  ee:	82 2b       	or	r24, r18
  f0:	81 bb       	out	0x11, r24	; 17
  f2:	08 95       	ret
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	91 f0       	breq	.+36     	; 0x11c <DIO_setPinDir+0x9a>
  f8:	28 f0       	brcs	.+10     	; 0x104 <DIO_setPinDir+0x82>
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	d9 f0       	breq	.+54     	; 0x134 <DIO_setPinDir+0xb2>
  fe:	83 30       	cpi	r24, 0x03	; 3
 100:	29 f1       	breq	.+74     	; 0x14c <DIO_setPinDir+0xca>
 102:	08 95       	ret
 104:	2a b3       	in	r18, 0x1a	; 26
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_setPinDir+0x8e>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_setPinDir+0x8a>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	8a bb       	out	0x1a, r24	; 26
 11a:	08 95       	ret
 11c:	27 b3       	in	r18, 0x17	; 23
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_setPinDir+0xa6>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_setPinDir+0xa2>
 12c:	80 95       	com	r24
 12e:	82 23       	and	r24, r18
 130:	87 bb       	out	0x17, r24	; 23
 132:	08 95       	ret
 134:	24 b3       	in	r18, 0x14	; 20
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_setPinDir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_setPinDir+0xba>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	84 bb       	out	0x14, r24	; 20
 14a:	08 95       	ret
 14c:	21 b3       	in	r18, 0x11	; 17
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_setPinDir+0xd6>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_setPinDir+0xd2>
 15c:	80 95       	com	r24
 15e:	82 23       	and	r24, r18
 160:	81 bb       	out	0x11, r24	; 17
 162:	08 95       	ret

00000164 <DIO_setPinValue>:
		break;
	}
	};

void DIO_setPinValue(uint8 port,uint8 pin,uint8 value){
		switch(value){
 164:	44 23       	and	r20, r20
 166:	b9 f1       	breq	.+110    	; 0x1d6 <DIO_setPinValue+0x72>
 168:	41 30       	cpi	r20, 0x01	; 1
 16a:	09 f0       	breq	.+2      	; 0x16e <DIO_setPinValue+0xa>
 16c:	6b c0       	rjmp	.+214    	; 0x244 <DIO_setPinValue+0xe0>
			case DIO_PIN_HIGH:
			{
				switch(port){
 16e:	81 30       	cpi	r24, 0x01	; 1
 170:	89 f0       	breq	.+34     	; 0x194 <DIO_setPinValue+0x30>
 172:	28 f0       	brcs	.+10     	; 0x17e <DIO_setPinValue+0x1a>
 174:	82 30       	cpi	r24, 0x02	; 2
 176:	c9 f0       	breq	.+50     	; 0x1aa <DIO_setPinValue+0x46>
 178:	83 30       	cpi	r24, 0x03	; 3
 17a:	11 f1       	breq	.+68     	; 0x1c0 <DIO_setPinValue+0x5c>
 17c:	08 95       	ret
					case DIO_PORTA:
					SET_BIT(PORTA,pin);
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_setPinValue+0x26>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_setPinValue+0x22>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
					break;
 192:	08 95       	ret
					case DIO_PORTB:
					SET_BIT(PORTB,pin);
 194:	28 b3       	in	r18, 0x18	; 24
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_setPinValue+0x3c>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_setPinValue+0x38>
 1a4:	82 2b       	or	r24, r18
 1a6:	88 bb       	out	0x18, r24	; 24
					break;
 1a8:	08 95       	ret
					case DIO_PORTC:
					SET_BIT(PORTC,pin);
 1aa:	25 b3       	in	r18, 0x15	; 21
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_setPinValue+0x52>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_setPinValue+0x4e>
 1ba:	82 2b       	or	r24, r18
 1bc:	85 bb       	out	0x15, r24	; 21
					break;
 1be:	08 95       	ret
					case DIO_PORTD:
					SET_BIT(PORTD,pin);
 1c0:	22 b3       	in	r18, 0x12	; 18
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_setPinValue+0x68>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_setPinValue+0x64>
 1d0:	82 2b       	or	r24, r18
 1d2:	82 bb       	out	0x12, r24	; 18
					break;
 1d4:	08 95       	ret
				}
			}
			break;
			case DIO_PIN_LOW:
			{
				switch(port){
 1d6:	81 30       	cpi	r24, 0x01	; 1
 1d8:	91 f0       	breq	.+36     	; 0x1fe <DIO_setPinValue+0x9a>
 1da:	28 f0       	brcs	.+10     	; 0x1e6 <DIO_setPinValue+0x82>
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	d9 f0       	breq	.+54     	; 0x216 <DIO_setPinValue+0xb2>
 1e0:	83 30       	cpi	r24, 0x03	; 3
 1e2:	29 f1       	breq	.+74     	; 0x22e <DIO_setPinValue+0xca>
 1e4:	08 95       	ret
					case DIO_PORTA:
					CLR_BIT(PORTA,pin);
 1e6:	2b b3       	in	r18, 0x1b	; 27
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_setPinValue+0x8e>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_setPinValue+0x8a>
 1f6:	80 95       	com	r24
 1f8:	82 23       	and	r24, r18
 1fa:	8b bb       	out	0x1b, r24	; 27
					break;
 1fc:	08 95       	ret
					case DIO_PORTB:
					CLR_BIT(PORTB,pin);
 1fe:	28 b3       	in	r18, 0x18	; 24
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_setPinValue+0xa6>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_setPinValue+0xa2>
 20e:	80 95       	com	r24
 210:	82 23       	and	r24, r18
 212:	88 bb       	out	0x18, r24	; 24
					break;
 214:	08 95       	ret
					case DIO_PORTC:
					CLR_BIT(PORTC,pin);
 216:	25 b3       	in	r18, 0x15	; 21
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_setPinValue+0xbe>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_setPinValue+0xba>
 226:	80 95       	com	r24
 228:	82 23       	and	r24, r18
 22a:	85 bb       	out	0x15, r24	; 21
					break;
 22c:	08 95       	ret
					case DIO_PORTD:
					CLR_BIT(PORTD,pin);
 22e:	22 b3       	in	r18, 0x12	; 18
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_setPinValue+0xd6>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_setPinValue+0xd2>
 23e:	80 95       	com	r24
 240:	82 23       	and	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret

00000246 <LCD_WRITE_CMD>:
void LOCATE_CURSOR(uint8 row,uint8 col){

	uint8 pos[4]={0x80,0xC0,0x94,0xD4};
	LCD_WRITE_CMD(pos[row]+col);

};
 246:	cf 93       	push	r28
 248:	c8 2f       	mov	r28, r24
 24a:	40 e0       	ldi	r20, 0x00	; 0
 24c:	63 e0       	ldi	r22, 0x03	; 3
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 254:	40 e0       	ldi	r20, 0x00	; 0
 256:	62 e0       	ldi	r22, 0x02	; 2
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 25e:	c4 fb       	bst	r28, 4
 260:	44 27       	eor	r20, r20
 262:	40 f9       	bld	r20, 0
 264:	60 e0       	ldi	r22, 0x00	; 0
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 26c:	c5 fb       	bst	r28, 5
 26e:	44 27       	eor	r20, r20
 270:	40 f9       	bld	r20, 0
 272:	61 e0       	ldi	r22, 0x01	; 1
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 27a:	c6 fb       	bst	r28, 6
 27c:	44 27       	eor	r20, r20
 27e:	40 f9       	bld	r20, 0
 280:	62 e0       	ldi	r22, 0x02	; 2
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 288:	4c 2f       	mov	r20, r28
 28a:	44 1f       	adc	r20, r20
 28c:	44 27       	eor	r20, r20
 28e:	44 1f       	adc	r20, r20
 290:	64 e0       	ldi	r22, 0x04	; 4
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 298:	41 e0       	ldi	r20, 0x01	; 1
 29a:	62 e0       	ldi	r22, 0x02	; 2
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 2a2:	85 e0       	ldi	r24, 0x05	; 5
 2a4:	8a 95       	dec	r24
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <LCD_WRITE_CMD+0x5e>
 2a8:	00 00       	nop
 2aa:	40 e0       	ldi	r20, 0x00	; 0
 2ac:	62 e0       	ldi	r22, 0x02	; 2
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 2b4:	95 e0       	ldi	r25, 0x05	; 5
 2b6:	9a 95       	dec	r25
 2b8:	f1 f7       	brne	.-4      	; 0x2b6 <LCD_WRITE_CMD+0x70>
 2ba:	00 00       	nop
 2bc:	4c 2f       	mov	r20, r28
 2be:	41 70       	andi	r20, 0x01	; 1
 2c0:	60 e0       	ldi	r22, 0x00	; 0
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 2c8:	c1 fb       	bst	r28, 1
 2ca:	44 27       	eor	r20, r20
 2cc:	40 f9       	bld	r20, 0
 2ce:	61 e0       	ldi	r22, 0x01	; 1
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 2d6:	c2 fb       	bst	r28, 2
 2d8:	44 27       	eor	r20, r20
 2da:	40 f9       	bld	r20, 0
 2dc:	62 e0       	ldi	r22, 0x02	; 2
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 2e4:	c3 fb       	bst	r28, 3
 2e6:	44 27       	eor	r20, r20
 2e8:	40 f9       	bld	r20, 0
 2ea:	64 e0       	ldi	r22, 0x04	; 4
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 2f2:	41 e0       	ldi	r20, 0x01	; 1
 2f4:	62 e0       	ldi	r22, 0x02	; 2
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 2fc:	85 e0       	ldi	r24, 0x05	; 5
 2fe:	8a 95       	dec	r24
 300:	f1 f7       	brne	.-4      	; 0x2fe <LCD_WRITE_CMD+0xb8>
 302:	00 00       	nop
 304:	40 e0       	ldi	r20, 0x00	; 0
 306:	62 e0       	ldi	r22, 0x02	; 2
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 30e:	95 e0       	ldi	r25, 0x05	; 5
 310:	9a 95       	dec	r25
 312:	f1 f7       	brne	.-4      	; 0x310 <LCD_WRITE_CMD+0xca>
 314:	00 00       	nop
 316:	87 ec       	ldi	r24, 0xC7	; 199
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	01 97       	sbiw	r24, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <LCD_WRITE_CMD+0xd4>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <LCD_WRITE_CMD+0xda>
 320:	00 00       	nop
 322:	cf 91       	pop	r28
 324:	08 95       	ret

00000326 <LCD_WRITE_CHAR>:
 326:	cf 93       	push	r28
 328:	c8 2f       	mov	r28, r24
 32a:	41 e0       	ldi	r20, 0x01	; 1
 32c:	63 e0       	ldi	r22, 0x03	; 3
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 334:	40 e0       	ldi	r20, 0x00	; 0
 336:	62 e0       	ldi	r22, 0x02	; 2
 338:	80 e0       	ldi	r24, 0x00	; 0
 33a:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 33e:	c4 fb       	bst	r28, 4
 340:	44 27       	eor	r20, r20
 342:	40 f9       	bld	r20, 0
 344:	60 e0       	ldi	r22, 0x00	; 0
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 34c:	c5 fb       	bst	r28, 5
 34e:	44 27       	eor	r20, r20
 350:	40 f9       	bld	r20, 0
 352:	61 e0       	ldi	r22, 0x01	; 1
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 35a:	c6 fb       	bst	r28, 6
 35c:	44 27       	eor	r20, r20
 35e:	40 f9       	bld	r20, 0
 360:	62 e0       	ldi	r22, 0x02	; 2
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 368:	4c 2f       	mov	r20, r28
 36a:	44 1f       	adc	r20, r20
 36c:	44 27       	eor	r20, r20
 36e:	44 1f       	adc	r20, r20
 370:	64 e0       	ldi	r22, 0x04	; 4
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 378:	41 e0       	ldi	r20, 0x01	; 1
 37a:	62 e0       	ldi	r22, 0x02	; 2
 37c:	80 e0       	ldi	r24, 0x00	; 0
 37e:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 382:	85 e0       	ldi	r24, 0x05	; 5
 384:	8a 95       	dec	r24
 386:	f1 f7       	brne	.-4      	; 0x384 <LCD_WRITE_CHAR+0x5e>
 388:	00 00       	nop
 38a:	40 e0       	ldi	r20, 0x00	; 0
 38c:	62 e0       	ldi	r22, 0x02	; 2
 38e:	80 e0       	ldi	r24, 0x00	; 0
 390:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 394:	95 e0       	ldi	r25, 0x05	; 5
 396:	9a 95       	dec	r25
 398:	f1 f7       	brne	.-4      	; 0x396 <LCD_WRITE_CHAR+0x70>
 39a:	00 00       	nop
 39c:	4c 2f       	mov	r20, r28
 39e:	41 70       	andi	r20, 0x01	; 1
 3a0:	60 e0       	ldi	r22, 0x00	; 0
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 3a8:	c1 fb       	bst	r28, 1
 3aa:	44 27       	eor	r20, r20
 3ac:	40 f9       	bld	r20, 0
 3ae:	61 e0       	ldi	r22, 0x01	; 1
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 3b6:	c2 fb       	bst	r28, 2
 3b8:	44 27       	eor	r20, r20
 3ba:	40 f9       	bld	r20, 0
 3bc:	62 e0       	ldi	r22, 0x02	; 2
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 3c4:	c3 fb       	bst	r28, 3
 3c6:	44 27       	eor	r20, r20
 3c8:	40 f9       	bld	r20, 0
 3ca:	64 e0       	ldi	r22, 0x04	; 4
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 3d2:	41 e0       	ldi	r20, 0x01	; 1
 3d4:	62 e0       	ldi	r22, 0x02	; 2
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 3dc:	85 e0       	ldi	r24, 0x05	; 5
 3de:	8a 95       	dec	r24
 3e0:	f1 f7       	brne	.-4      	; 0x3de <LCD_WRITE_CHAR+0xb8>
 3e2:	00 00       	nop
 3e4:	40 e0       	ldi	r20, 0x00	; 0
 3e6:	62 e0       	ldi	r22, 0x02	; 2
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_setPinValue>
 3ee:	95 e0       	ldi	r25, 0x05	; 5
 3f0:	9a 95       	dec	r25
 3f2:	f1 f7       	brne	.-4      	; 0x3f0 <LCD_WRITE_CHAR+0xca>
 3f4:	00 00       	nop
 3f6:	87 ec       	ldi	r24, 0xC7	; 199
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	01 97       	sbiw	r24, 0x01	; 1
 3fc:	f1 f7       	brne	.-4      	; 0x3fa <LCD_WRITE_CHAR+0xd4>
 3fe:	00 c0       	rjmp	.+0      	; 0x400 <__EEPROM_REGION_LENGTH__>
 400:	00 00       	nop
 402:	cf 91       	pop	r28
 404:	08 95       	ret

00000406 <LCD_WRITE_STRING>:
void LCD_WRITE_STRING(uint8* str){
 406:	0f 93       	push	r16
 408:	1f 93       	push	r17
 40a:	cf 93       	push	r28
 40c:	df 93       	push	r29
 40e:	8c 01       	movw	r16, r24

	int i=0;
 410:	c0 e0       	ldi	r28, 0x00	; 0
 412:	d0 e0       	ldi	r29, 0x00	; 0
	while( str[i] != '\0' ){
 414:	03 c0       	rjmp	.+6      	; 0x41c <LCD_WRITE_STRING+0x16>
		LCD_WRITE_CHAR( str[i] );
 416:	0e 94 93 01 	call	0x326	; 0x326 <LCD_WRITE_CHAR>
		i++;
 41a:	21 96       	adiw	r28, 0x01	; 1

};
void LCD_WRITE_STRING(uint8* str){

	int i=0;
	while( str[i] != '\0' ){
 41c:	f8 01       	movw	r30, r16
 41e:	ec 0f       	add	r30, r28
 420:	fd 1f       	adc	r31, r29
 422:	80 81       	ld	r24, Z
 424:	81 11       	cpse	r24, r1
 426:	f7 cf       	rjmp	.-18     	; 0x416 <LCD_WRITE_STRING+0x10>
		LCD_WRITE_CHAR( str[i] );
		i++;
	}
	
};
 428:	df 91       	pop	r29
 42a:	cf 91       	pop	r28
 42c:	1f 91       	pop	r17
 42e:	0f 91       	pop	r16
 430:	08 95       	ret

00000432 <LCD_CLR>:
void LCD_CLR(void){
	LCD_WRITE_CMD(0x01);
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WRITE_CMD>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 438:	8f e3       	ldi	r24, 0x3F	; 63
 43a:	9c e9       	ldi	r25, 0x9C	; 156
 43c:	01 97       	sbiw	r24, 0x01	; 1
 43e:	f1 f7       	brne	.-4      	; 0x43c <LCD_CLR+0xa>
 440:	00 c0       	rjmp	.+0      	; 0x442 <LCD_CLR+0x10>
 442:	00 00       	nop
 444:	08 95       	ret

00000446 <LCD_Display>:
	_delay_ms(10);
};

void LCD_Display(uint8_t B_B)
{
	if (B_B==0)B_LCDDispControl&=0b11111011;		// Display off
 446:	81 11       	cpse	r24, r1
 448:	06 c0       	rjmp	.+12     	; 0x456 <LCD_Display+0x10>
 44a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 44e:	8b 7f       	andi	r24, 0xFB	; 251
 450:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 454:	07 c0       	rjmp	.+14     	; 0x464 <LCD_Display+0x1e>
	else if (B_B==1)B_LCDDispControl|=0b00000100;	// Display on
 456:	81 30       	cpi	r24, 0x01	; 1
 458:	29 f4       	brne	.+10     	; 0x464 <LCD_Display+0x1e>
 45a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 45e:	84 60       	ori	r24, 0x04	; 4
 460:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	LCD_WRITE_CMD(B_LCDDispControl);
 464:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 468:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WRITE_CMD>
 46c:	08 95       	ret

0000046e <LCD_Cursor>:
}

//========================================================
void LCD_Cursor(uint8_t B_B)
{
	if (B_B==0)B_LCDDispControl&=0b11111101;		// Cursor off
 46e:	81 11       	cpse	r24, r1
 470:	06 c0       	rjmp	.+12     	; 0x47e <LCD_Cursor+0x10>
 472:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 476:	8d 7f       	andi	r24, 0xFD	; 253
 478:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 47c:	17 c0       	rjmp	.+46     	; 0x4ac <LCD_Cursor+0x3e>
	else if (B_B==1)B_LCDDispControl|=0b00000010;	// Cursor on
 47e:	81 30       	cpi	r24, 0x01	; 1
 480:	31 f4       	brne	.+12     	; 0x48e <LCD_Cursor+0x20>
 482:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 486:	82 60       	ori	r24, 0x02	; 2
 488:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 48c:	0f c0       	rjmp	.+30     	; 0x4ac <LCD_Cursor+0x3e>
	else if (B_B==2)B_LCDDispControl|=0b00000001;	// Cursor blink on
 48e:	82 30       	cpi	r24, 0x02	; 2
 490:	31 f4       	brne	.+12     	; 0x49e <LCD_Cursor+0x30>
 492:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 496:	81 60       	ori	r24, 0x01	; 1
 498:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 49c:	07 c0       	rjmp	.+14     	; 0x4ac <LCD_Cursor+0x3e>
	else if (B_B==3)B_LCDDispControl&=0b11111110;	// Cursor blink off
 49e:	83 30       	cpi	r24, 0x03	; 3
 4a0:	29 f4       	brne	.+10     	; 0x4ac <LCD_Cursor+0x3e>
 4a2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 4a6:	8e 7f       	andi	r24, 0xFE	; 254
 4a8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	LCD_WRITE_CMD(B_LCDDispControl);
 4ac:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 4b0:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WRITE_CMD>
 4b4:	08 95       	ret

000004b6 <LCD_INIT>:


void LCD_INIT(void){
	#if LCD_MODE == 4
	
	PORTA |= 0B00001100; DDRA |= 0B00001100;
 4b6:	8b b3       	in	r24, 0x1b	; 27
 4b8:	8c 60       	ori	r24, 0x0C	; 12
 4ba:	8b bb       	out	0x1b, r24	; 27
 4bc:	8a b3       	in	r24, 0x1a	; 26
 4be:	8c 60       	ori	r24, 0x0C	; 12
 4c0:	8a bb       	out	0x1a, r24	; 26
	PORTB|=0B00010111;DDRB|=0B00010111;
 4c2:	88 b3       	in	r24, 0x18	; 24
 4c4:	87 61       	ori	r24, 0x17	; 23
 4c6:	88 bb       	out	0x18, r24	; 24
 4c8:	87 b3       	in	r24, 0x17	; 23
 4ca:	87 61       	ori	r24, 0x17	; 23
 4cc:	87 bb       	out	0x17, r24	; 23
	
	
	DIO_setPinDir(LCD_4BIT_CMD_PORT,LCD_RS_PIN,DIO_PIN_OUTPUT);
 4ce:	41 e0       	ldi	r20, 0x01	; 1
 4d0:	63 e0       	ldi	r22, 0x03	; 3
 4d2:	80 e0       	ldi	r24, 0x00	; 0
 4d4:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDir>
	DIO_setPinDir(LCD_4BIT_CMD_PORT,LCD_E_PIN,DIO_PIN_OUTPUT);
 4d8:	41 e0       	ldi	r20, 0x01	; 1
 4da:	62 e0       	ldi	r22, 0x02	; 2
 4dc:	80 e0       	ldi	r24, 0x00	; 0
 4de:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDir>
  //DIO_setPinDir(LCD_4BIT_CMD_PORT,LCD_RW_PIN,DIO_PIN_OUTPUT);
	DIO_setPinDir(LCD_4BIT_DATA_PORT,LCD_D4,DIO_PIN_OUTPUT);
 4e2:	41 e0       	ldi	r20, 0x01	; 1
 4e4:	60 e0       	ldi	r22, 0x00	; 0
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDir>
	DIO_setPinDir(LCD_4BIT_DATA_PORT,LCD_D5,DIO_PIN_OUTPUT);
 4ec:	41 e0       	ldi	r20, 0x01	; 1
 4ee:	61 e0       	ldi	r22, 0x01	; 1
 4f0:	81 e0       	ldi	r24, 0x01	; 1
 4f2:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDir>
	DIO_setPinDir(LCD_4BIT_DATA_PORT,LCD_D6,DIO_PIN_OUTPUT);
 4f6:	41 e0       	ldi	r20, 0x01	; 1
 4f8:	62 e0       	ldi	r22, 0x02	; 2
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDir>
	DIO_setPinDir(LCD_4BIT_DATA_PORT,LCD_D7,DIO_PIN_OUTPUT);
 500:	41 e0       	ldi	r20, 0x01	; 1
 502:	64 e0       	ldi	r22, 0x04	; 4
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDir>
	LCD_WRITE_CMD(0x02);
 50a:	82 e0       	ldi	r24, 0x02	; 2
 50c:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WRITE_CMD>
	LCD_WRITE_CMD(0x28);
 510:	88 e2       	ldi	r24, 0x28	; 40
 512:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WRITE_CMD>
	LCD_Cursor(CURSOR_OFF);
 516:	80 e0       	ldi	r24, 0x00	; 0
 518:	0e 94 37 02 	call	0x46e	; 0x46e <LCD_Cursor>
	LCD_Cursor(CURSOR_BLINK_OFF);
 51c:	83 e0       	ldi	r24, 0x03	; 3
 51e:	0e 94 37 02 	call	0x46e	; 0x46e <LCD_Cursor>
	LCD_Display(DISPLAY_ON);
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	0e 94 23 02 	call	0x446	; 0x446 <LCD_Display>
	LCD_WRITE_CMD(0x06);
 528:	86 e0       	ldi	r24, 0x06	; 6
 52a:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WRITE_CMD>
	LCD_CLR();
 52e:	0e 94 19 02 	call	0x432	; 0x432 <LCD_CLR>
 532:	08 95       	ret

00000534 <main>:


int main(void)
{
    /* Replace with your application code */
	DDRB |= 0x80;
 534:	87 b3       	in	r24, 0x17	; 23
 536:	80 68       	ori	r24, 0x80	; 128
 538:	87 bb       	out	0x17, r24	; 23
	PORTB |= 0x80;
 53a:	88 b3       	in	r24, 0x18	; 24
 53c:	80 68       	ori	r24, 0x80	; 128
 53e:	88 bb       	out	0x18, r24	; 24
	LCD_INIT();
 540:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <LCD_INIT>
	LCD_WRITE_STRING("Islam");
 544:	81 e6       	ldi	r24, 0x61	; 97
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	0e 94 03 02 	call	0x406	; 0x406 <LCD_WRITE_STRING>
 54c:	ff cf       	rjmp	.-2      	; 0x54c <main+0x18>

0000054e <_exit>:
 54e:	f8 94       	cli

00000550 <__stop_program>:
 550:	ff cf       	rjmp	.-2      	; 0x550 <__stop_program>
